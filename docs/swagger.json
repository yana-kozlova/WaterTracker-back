{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "WaterTracker",
    "description": "Трекер води є веб-застосунком, який дозволяє користувачеві стежити за своїм щоденним вживанням води. Застосунок має наступні функціональні компоненти: Головна сторінка, Журнал води та Налаштування."
  },
  "servers": [{ "url": "http://localhost:3000" }, { "url": "https://watertracker-back-i1qk.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "OAuth",
      "description": "Authenticate a user using a Google OAuth code. Logs in an existing user or registers a new one."
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Water"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration and login",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login user"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "bHvTdZr6Vn/T2XOVh3X7y74kQkejGX1EjYThjH0K"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": ""
                            },
                            "gender": {
                              "type": "string",
                              "example": "male"
                            },
                            "email": {
                              "type": "string",
                              "example": "user@gmail.com"
                            },
                            "daily_norma": {
                              "type": "number",
                              "example": 15000
                            },
                            "avatar_url": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/dicmiyfo1/image/upload/v1734389173/vb6i6kldrc6umwxtfhci.jpg"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message"
                        },
                        "errors": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Email must be a valid email address",
                                "Email does not match the required pattern"
                              ]
                            },
                            "password": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["Password cannot be empty"]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already used",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login user"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "bHvTdZr6Vn/T2XOVh3X7y74kQkejGX1EjYThjH0K"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "User"
                            },
                            "gender": {
                              "type": "string",
                              "example": "male"
                            },
                            "email": {
                              "type": "string",
                              "example": "user@gmail.com"
                            },
                            "daily_norma": {
                              "type": "number",
                              "example": 15000
                            },
                            "avatar_url": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/dicmiyfo1/image/upload/v1734389173/vb6i6kldrc6umwxtfhci.jpg"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Email or password is invalid",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "BadRequestError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "errors": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["Email must be a valid email address"]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {}
        },
        "responses": {
          "204": {
            "description": "Successfully logout",
            "content": {}
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh token",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed token"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "bHvTdZr6Vn/T2XOVh3X7y74kQkejGX1EjYThjH0K"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send reset url to email",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email",
                    "example": "user@gmail.com",
                    "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset password",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "token"],
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "Password1",
                    "minLength": 8,
                    "maxLength": 64
                  },
                  "token": {
                    "type": "string",
                    "description": "Token",
                    "example": "bHvTdZr6Vn/T2XOVh3X7y74kQkejGX1EjYThjH0K"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password was successfully reset!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password was successfully reset!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/auth/get-oauth-url": {
      "get": {
        "tags": ["OAuth"],
        "summary": "Get OAuth url",
        "requestBody": {
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successfully get Google OAuth url!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get Google OAuth url!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dicmiyfo1/image/upload/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/auth/confirm-oauth": {
      "post": {
        "tags": ["OAuth"],
        "summary": "Confirm OAuth",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["code"],
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "4/0AX4XfWh9r8wGc5a2abcdefg..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password was successfully reset!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password was successfully reset!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user data",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successfully found user data!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user data!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "User"
                        },
                        "gender": {
                          "type": "string",
                          "example": "male"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@gmail.com"
                        },
                        "daily_norma": {
                          "type": "number",
                          "example": 15000
                        },
                        "avatar_url": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dicmiyfo1/image/upload/v1734389173/vb6i6kldrc6umwxtfhci.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token expired / Session not found",
            "content": {}
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update user data",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "User"
                        },
                        "gender": {
                          "type": "string",
                          "example": "male"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@gmail.com"
                        },
                        "daily_norma": {
                          "type": "number",
                          "example": 15000
                        },
                        "avatar_url": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dicmiyfo1/image/upload/v1734389173/vb6i6kldrc6umwxtfhci.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message"
                        },
                        "errors": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Email must be a valid email address",
                                "Email does not match the required pattern"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token expired / Session not found",
            "content": {}
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      }
    },
    "/users/water-rate": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user Daily Norma",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "daily_norma": {
                    "type": "number",
                    "example": 15000,
                    "minimum": 0,
                    "maximum": 15000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Daily Norma is successfully updated!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Daily Norma is successfully updated!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "User"
                        },
                        "gender": {
                          "type": "string",
                          "example": "male"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@gmail.com"
                        },
                        "daily_norma": {
                          "type": "number",
                          "example": 15000
                        },
                        "avatar_url": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dicmiyfo1/image/upload/v1734389173/vb6i6kldrc6umwxtfhci.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message"
                        },
                        "errors": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Email must be a valid email address",
                                "Email does not match the required pattern"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token expired / Session not found",
            "content": {}
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user Avatar",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar_url": {
                    "type": "string",
                    "format": "binary",
                    "description": "The avatar file to upload."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's avatar is successfully updated!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User's avatar is successfully updated!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "User"
                        },
                        "gender": {
                          "type": "string",
                          "example": "male"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@gmail.com"
                        },
                        "daily_norma": {
                          "type": "number",
                          "example": 15000
                        },
                        "avatar_url": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dicmiyfo1/image/upload/v1734389173/vb6i6kldrc6umwxtfhci.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message"
                        },
                        "errors": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Email must be a valid email address",
                                "Email does not match the required pattern"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token expired / Session not found",
            "content": {}
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/",
            "example": "user@gmail.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 64,
            "description": "User's password",
            "example": "Password1"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Password1"
          }
        }
      },
      "EditUserRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "daily_norma": {
            "type": "number",
            "example": 15000,
            "minimum": 0,
            "maximum": 15000
          },
          "name": {
            "type": "string",
            "example": "User",
            "maxLength": 32
          },
          "gender": {
            "type": "string",
            "example": "male",
            "enum": ["male", "female"]
          },
          "email": {
            "type": "string",
            "example": "user@gmail.com",
            "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/"
          },
          "new_password": {
            "type": "string",
            "example": "Password1",
            "minLength": 8,
            "maxLength": 64
          },
          "old_password": {
            "type": "string",
            "example": "Password2",
            "minLength": 8,
            "maxLength": 64
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
