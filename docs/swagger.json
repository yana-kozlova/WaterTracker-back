{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "WaterTracker",
    "description": "Трекер води є веб-застосунком, який дозволяє користувачеві стежити за своїм щоденним вживанням води. Застосунок має наступні функціональні компоненти: Головна сторінка, Журнал води та Налаштування."
  },
  "servers": [{ "url": "http://localhost:3000" }, {"url": "https://watertracker-back-i1qk.onrender.com"}],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User's endpoints"
    },
    {
      "name": "Water"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered user!",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message"
                        },
                        "errors": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Email must be a valid email address",
                                "Email does not match the required pattern"
                              ]
                            },
                            "password": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["Password cannot be empty"]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already used",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login user"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "bHvTdZr6Vn/T2XOVh3X7y74kQkejGX1EjYThjH0K"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Email or password is invalid",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "BadRequestError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "errors": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["Email must be a valid email address"]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {}
        },
        "responses": {
          "204": {
            "description": "Successfully logout",
            "content": {}
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh token",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed token"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "bHvTdZr6Vn/T2XOVh3X7y74kQkejGX1EjYThjH0K"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get user data",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successfully found user data!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user data!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "675f7894477c48f6cdcbf4d1"
                        },
                        "daily_norma": {
                          "type": "number",
                          "example": 15000
                        },
                        "name": {
                          "type": "string",
                          "example": "Yana"
                        },
                        "gender": {
                          "type": "string",
                          "example": "yana3@gmail.com"
                        },
                        "email": {
                          "type": "string",
                          "example": "675f7894477c48f6cdcbf4d1"
                        },
                        "password": {
                          "type": "string",
                          "example": "$2b$10$zI7cHyK2HopUzBBKO5DGieuZ1PIx0ZU1KD2EnkHbKcDcETaszFROq"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-12-16T00:47:16.705Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2024-12-16T00:47:16.705Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token expired / Session not found",
            "content": {}
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update user data",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "675f7894477c48f6cdcbf4d1"
                        },
                        "daily_norma": {
                          "type": "number",
                          "example": 15000
                        },
                        "name": {
                          "type": "string",
                          "example": "User"
                        },
                        "gender": {
                          "type": "string",
                          "example": "male"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@gmail.com"
                        },
                        "password": {
                          "type": "string",
                          "example": "$2b$10$zI7cHyK2HopUzBBKO5DGieuZ1PIx0ZU1KD2EnkHbKcDcETaszFROq"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-12-16T00:47:16.705Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2024-12-16T00:47:16.705Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message"
                        },
                        "errors": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Email must be a valid email address",
                                "Email does not match the required pattern"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token expired / Session not found",
            "content": {}
          },
          "500": {
            "description": "InternalServerError",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "jane@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Password1"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "jane@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Password1"
          }
        }
      },
      "EditUserRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "daily_norma": {
            "type": "number",
            "example": 15000
          },
          "name": {
            "type": "string",
            "example": "User"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "email": {
            "type": "string",
            "example": "user@gmail.com"
          },
          "new_password": {
            "type": "string",
            "example": "Password1"
          },
          "old_password": {
            "type": "string",
            "example": "Password2"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
